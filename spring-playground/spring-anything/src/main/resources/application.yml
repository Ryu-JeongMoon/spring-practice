spring:
  cache:
    type: redis
  data:
    redis:
      host: localhost
      port: 6379
      password:
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true
    #flyway:
    #  enabled: false
    #  baseline-on-migrate: true
    #  validate-on-migrate: false
    #  classpath: db/migration
  jpa:
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: false
        format_sql: false
        highlight_sql: false
        default_batch_fetch_size: 1000
  jta:
    enabled: false
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        debug: true
        transport.protocol: smtp
        smtp:
          auth: true
          ssl:
            trust: ${spring.mail.host}
          starttls:
            enable: true
  mybatis:
    enabled: false
  servlet:
    multipart:
      location: temp-files
      max-file-size: 100MB
      max-request-size: 100MB
  threads:
    virtual:
      enabled: true
  thymeleaf:
    cache: false

  datasource:
    hikari:
      jdbc-url: jdbc:mysql://localhost:3306/spring_anything?serverTimezone=Asia/Seoul&useSSL=false&allowPublicKeyRetrieval=true
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: sa
      password: 111111
      #jdbc-url: jdbc:h2:tcp://localhost/~/spring-anything
      #driver-class-name: org.h2.Driver
      #username: sa
      #password:
      xa:
        min-poolsize: 10
        max-poolsize: 20
        xa-data-source-class-name: com.mysql.cj.jdbc.MysqlXADataSource
        xa-properties:
          url: jdbc:mysql://localhost:3306/spring_anything?serverTimezone=Asia/Seoul&useSSL=false&allowPublicKeyRetrieval=true
          user: sa
          password: 111111
    my-batis:
      hikari:
        jdbc-url: jdbc:mysql://localhost:3306/spring_anything?serverTimezone=Asia/Seoul&useSSL=false&allowPublicKeyRetrieval=true
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: sa
        password: 111111
        #jdbc-url: jdbc:h2:tcp://localhost/~/spring-anything
        #driver-class-name: org.h2.Driver
        #username: sa
        #password:
      xa:
        min-poolsize: 10
        max-poolsize: 20
        xa-data-source-class-name: com.mysql.cj.jdbc.MysqlXADataSource
        xa-properties:
          url: jdbc:mysql://localhost:3306/spring_anything?serverTimezone=Asia/Seoul&useSSL=false&allowPublicKeyRetrieval=true
          user: sa
          password: 111111

server:
  max-http-request-header-size: 10KB
  tomcat:
    keep-alive-timeout: 5000ms
  port: 8080
  servlet:
    session:
      cookie:
        secure: true

decorator:
  datasource:
    p6spy:
      enable-logging: true

logging:
  level:
    #sql: debug
    #org.mybatis: debug
    #org.hibernate: debug
    #org.hibernate.orm.jdbc.bind: trace
    org.springframework.data.repository: debug
    org.hibernate.engine.transaction.internal.TransactionImpl: debug
    reactor.netty: debug
    com.springanything.config: debug
    com.springanything.aop.LogAspect: debug

webclient:
  max-byte-count: 16777216
  read-write-timeout-seconds: 30
  response-timeout-seconds: 30
  connect-timeout-millis: 3000
  max-idle-and-life-time-seconds: 20

jasypt:
  encryptor:
    password: test

app:
  username: ENC(n/Wa+KSIgpTEdsQct4bDUHK8utp2+iRiMrCGjMH0LIB+qPM4jjY9oHuDxfnD3O4v)
  password: ENC(iLvJmw702W4E3HGb1Db21zZOdA6OCeOH/tfkuNccf1EcwQgR73rWOFWOQdfavWFq)
  mail:
    personal: ${MAIL_PERSONAL}
    address: ${MAIL_ADDRESS}

condition:
  enabled:
    mail: false
    retry: false
    method-security: true
    chained-transaction: false

springanything:
  conditional: true

mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mapper/*.xml

hibernate:
  connection:
    handling_mode: 'DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION'

integration:
  aws:
    cloudfront:
      domain: ${CLOUDFRONT_DOMAIN}
    s3:
      region: ${S3_REGION}
      bucket: ${S3_BUCKET}
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
